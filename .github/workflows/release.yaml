name: Rust

on:
    push:
        tags:
            - v-*
            
env:
    CARGO_TERM_COLOR: always

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2


            -   name: Get version
                id: get_version
                run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}


            -   name: show
                run: |
                    rustc --version
                    cargo --version

            -   name: cargo build
                run: |
                    cargo build --release
                    ls -al
                    zip /home/runner/work/fake-redis-rs/fake-redis-rs.zip /home/runner/work/fake-redis-rs/fake-redis-rs

            # 创建release
            -   name: Create Release
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
                with:
                    tag_name: ${{ github.ref }}
                    release_name: Release ${{ github.ref }}
                    draft: false
                    prerelease: false


            # 上传文件到actions
            -   name: Upload Release cgo linux
                uses: actions/upload-release-asset@v1.0.1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: /home/runner/work/fake-redis-rs/fake-redis-rs.zip
                    asset_name: fake-redis-rs-${{ steps.create_release.outputs.tag }}-linux-x64.zip
                    asset_content_type: application/zip
